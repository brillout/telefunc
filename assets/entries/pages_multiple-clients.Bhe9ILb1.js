import{u as r,o as a,a as l}from"../chunks/chunk-DwVAO9jS.js";import{j as e}from"../chunks/chunk-DRRrHF0e.js";import{L as n}from"../chunks/chunk-B0JU7VPY.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */const s=[{pageSectionId:"see-also",pageSectionLevel:2,pageSectionTitle:"See also"}];function i(o){const t={li:"li",p:"p",ul:"ul",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsxs(t.p,{children:["If your telefunctions are used by multiple clients, we recommend deploying one Telefunc server per client, in order to preserve all the ",e.jsx(n,{href:"/event-based",children:"benefits of event-based telefunctions"}),". In other words, each client uses a different set of event-based telefunctions."]}),`
`,e.jsxs(t.p,{children:["That said, if the client needs are similar, it case make sense to ",e.jsx(n,{href:"/event-based#opt-out",children:"opt-out of event-based telefunctions"})," and create telefunctions that are slight more generic."]}),`
`,e.jsx("h2",{id:"see-also",children:"See also"}),`
`,e.jsxs(t.ul,{children:[`
`,e.jsxs(t.li,{children:[`
`,e.jsx(n,{href:"/event-based"}),`
`]}),`
`]})]})}function d(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}const p=Object.freeze(Object.defineProperty({__proto__:null,default:d,pageSectionsExport:s},Symbol.toStringTag,{value:"Module"})),C={serverOnlyHooks:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!1}},isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:l}},onCreatePageContext:{type:"cumulative",definedAtData:[{filePathToShowToUser:"@brillout/docpress/renderer/onCreatePageContext",fileExportPathToShowToUser:[]}],valueSerialized:[{type:"pointer-import",value:a}]},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/multiple-clients/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:p}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}}};export{C as configValuesSerialized};
