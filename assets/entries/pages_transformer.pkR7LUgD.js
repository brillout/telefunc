import{u as n,o as l,a}from"../chunks/chunk-DwVAO9jS.js";import{j as e}from"../chunks/chunk-DRRrHF0e.js";import{L as r}from"../chunks/chunk-B0JU7VPY.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */const s=[];function i(o){const t={a:"a",blockquote:"blockquote",code:"code",li:"li",p:"p",ul:"ul",...n(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsxs(t.p,{children:["Telefunc plugins transforms ",e.jsx(t.code,{children:".telefunc.js"})," files for:"]}),`
`,e.jsxs(t.ul,{children:[`
`,e.jsxs(t.li,{children:["The client-side, replacing ",e.jsx(t.code,{children:".telefunc.js"})," imports with a thin HTTP client."]}),`
`,e.jsxs(t.li,{children:["The server-side, for ",e.jsx(r,{text:"automatic TypeScript runtime validation",href:"/shield#typescript-automatic",doNotInferSectionTitle:!0}),"."]}),`
`]}),`
`,e.jsxs(t.p,{children:["Telefunc plugins also automatically crawl your ",e.jsx(t.code,{children:".telefunc.js"})," files (so that you don't have to use ",e.jsx(r,{href:"/telefuncFiles",children:e.jsx(t.code,{children:"config.telefuncFiles"})}),")."]}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsxs(t.p,{children:["There is work-in-progress to be able to use Telefunc without any transformer, see ",e.jsx(t.a,{href:"https://github.com/brillout/telefunc/issues/52",children:"#52"}),"."]}),`
`]})]})}function d(o={}){const{wrapper:t}={...n(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}const u=Object.freeze(Object.defineProperty({__proto__:null,default:d,pageSectionsExport:s},Symbol.toStringTag,{value:"Module"})),C={serverOnlyHooks:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!1}},isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:a}},onCreatePageContext:{type:"cumulative",definedAtData:[{filePathToShowToUser:"@brillout/docpress/renderer/onCreatePageContext",fileExportPathToShowToUser:[]}],valueSerialized:[{type:"pointer-import",value:l}]},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/transformer/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:u}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}}};export{C as configValuesSerialized};
